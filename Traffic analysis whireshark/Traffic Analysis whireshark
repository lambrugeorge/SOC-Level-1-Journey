# Wireshark: Traffic Analysis  
**Premium Room**  

Learn the basics of traffic analysis with Wireshark and how to find anomalies on your network!  

---

## Task 2: Nmap Scans  

Nmap is an industry-standard tool for mapping networks, identifying live hosts, and discovering services. As one of the most used network scanner tools, a security analyst should identify the network patterns created with it.  

This section covered the most common **Nmap scan types**:  

### 🔹 TCP Flags in a Nutshell
- **SYN flag:** `tcp.flags == 2` or `tcp.flags.syn == 1`  
- **ACK flag:** `tcp.flags == 16` or `tcp.flags.ack == 1`  
- **SYN+ACK:** `tcp.flags == 18`  
- **RST flag:** `tcp.flags == 4` or `tcp.flags.reset == 1`  
- **RST+ACK:** `tcp.flags == 20`  
- **FIN flag:** `tcp.flags == 1`  

---

### 🔹 TCP Connect Scans
- Relies on the **three-way handshake** (handshake completed).  
- Command: `nmap -sT`  
- Used by **non-root users**.  
- Typically have **window size > 1024**.  
- **Filter:**  

tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size > 1024


---

### 🔹 SYN Scans
- Does **not** complete the handshake.  
- Command: `nmap -sS`  
- Used by **privileged/root users**.  
- Typically have **window size <= 1024**.  
- **Filter:**  
tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size <= 1024


---

### 🔹 UDP Scans
- No handshake required.  
- Open ports → no response.  
- Closed ports → ICMP error (Type 3, Code 3).  
- Command: `nmap -sU`  
- **Filter:**  

icmp.type==3 and icmp.code==3


---

## 📝 Answer the Questions  

**Q1: What is the total number of the "TCP Connect" scans?**  
✅ **Answer:** 1000  
![image](1.png)


**Q2: Which scan type is used to scan the TCP port 80?**  
✅ **Answer:** TCP Connect  
![image](2.png)


**Q3: How many "UDP close port" messages are there?**  
✅ **Answer:** 1083  
![image](2.png)



**Q4: Which UDP port in the 55-70 port range is open?**  
✅ **Answer:** 68
![image](4.png)


----------------------------------------------------------------------------------------

## 🎯 Task 3 Summary: ARP Poisoning & MITM Detection

### 🔍 What You've Mastered:

**🛡️ ARP Protocol Fundamentals:**
- ✅ Understanding Address Resolution Protocol (ARP) basics
- ✅ Learning how devices identify themselves on networks  
- ✅ Recognizing ARP's security vulnerabilities (no authentication!)

**🚨 Attack Detection Skills:**
- ✅ Identifying ARP spoofing attempts through MAC address conflicts
- ✅ Detecting ARP flooding patterns and malicious requests
- ✅ Spotting Man-in-the-Middle attacks in HTTP traffic
- ✅ Using Wireshark filters to hunt for ARP anomalies

**🔧 Practical Analysis Techniques:**
- ✅ Using `arp` filters to find low-hanging fruits
- ✅ Detecting duplicate ARP responses (expert info warnings)
- ✅ Correlating MAC addresses with IP addresses
- ✅ Identifying attacker, victim, and gateway roles

### 📊 Exercise Results & Analysis:

**Q1: Number of ARP requests crafted by the attacker?**
- **Answer:** 284 requests
- **Analysis:** ![image](5.png) - Shows the massive volume of ARP requests generated by the attacker, indicating a systematic ARP flooding attack

**Q2: Number of HTTP packets received by the attacker?**
- **Answer:** 90 packets
- **Analysis:** ![image](6.png) - Demonstrates successful traffic interception, proving the MITM attack was effective

**Q3: Number of sniffed username & password entries?**
- **Answer:** 6 entries
- **Analysis:** ![image](7.png) - Shows the real impact of the attack - multiple compromised credentials

**Q4: Password of "Client986"?**
- **Answer:** clientnothere!
- **Analysis:** Successfully extracted sensitive authentication data

**Q5: Comment provided by "Client354"?**
- **Answer:** Nice work!
- **Analysis:** ![image](9.png) - Shows additional data theft beyond credentials

----------------------------------------------------------------------------------------

## 🎯 Task 4: Identifying Hosts

### 🔍 What You'll Master:

**🖥️ Host Identification Fundamentals:**
- ✅ Understanding how to identify hosts beyond IP-to-MAC mapping
- ✅ Learning enterprise network naming patterns and their security implications
- ✅ Mastering multiple protocols for host and user identification

**🔧 Protocol Analysis Skills:**
- ✅ **DHCP Analysis** - Dynamic Host Configuration Protocol investigation
- ✅ **NetBIOS (NBNS) Analysis** - Network Basic Input/Output System traffic
- ✅ **Kerberos Analysis** - Windows domain authentication service

### 📊 DHCP Analysis

**DHCP Protocol Overview:**
DHCP (Dynamic Host Configuration Protocol) manages automatic IP address assignment and communication parameters.

**🔍 DHCP Investigation Techniques:**

| Notes | Wireshark Filter |
|-------|------------------|
| Global search | `dhcp or bootp` |
| Request packets | `dhcp.option.dhcp == 3` |
| ACK packets | `dhcp.option.dhcp == 5` |
| NAK packets | `dhcp.option.dhcp == 6` |

**📋 Key DHCP Options:**
- **Option 12:** Hostname
- **Option 50:** Requested IP address  
- **Option 51:** Requested IP lease time
- **Option 61:** Client's MAC address
- **Option 15:** Domain name (ACK packets)
- **Option 56:** Rejection message (NAK packets)

**🔧 Advanced Filters:**
```
dhcp.option.hostname contains "keyword"
dhcp.option.domain_name contains "keyword"
```

### 📊 NetBIOS (NBNS) Analysis

**NetBIOS Overview:**
Network Basic Input/Output System enables communication between applications on different hosts.

**🔍 NBNS Investigation:**

| Notes | Wireshark Filter |
|-------|------------------|
| Global search | `nbns` |
| Name queries | `nbns.name contains "keyword"` |

**📋 Key Information:**
- Query details contain name, TTL, and IP address information
- Registration requests show host activity patterns

### 📊 Kerberos Analysis

**Kerberos Overview:**
Default authentication service for Microsoft Windows domains, responsible for secure identity verification.

**🔍 Kerberos Investigation:**

| Notes | Wireshark Filter |
|-------|------------------|
| Global search | `kerberos` |
| User accounts | `kerberos.CNameString contains "keyword"` |
| Exclude hostnames | `kerberos.CNameString and !(kerberos.CNameString contains "$")` |

**📋 Key Kerberos Fields:**
- **CNameString:** Username (values ending with "$" are hostnames)
- **pvno:** Protocol version
- **realm:** Domain name for generated ticket
- **sname:** Service and domain name
- **addresses:** Client IP and NetBIOS name (request packets only)

**🔧 Advanced Filters:**
```
kerberos.pvno == 5
kerberos.realm contains ".org"
kerberos.SNameString == "krbtg"
```

---

## 📝 Answer the Questions

### 🔹 DHCP & NetBIOS Analysis
*Use the "Desktop/exercise-pcaps/dhcp-netbios-kerberos/dhcp-netbios.pcap" file.*

**Q1: What is the MAC address of the host "Galaxy A30"?**
✅ **Answer:** `9a:81:41:cb:96:6c`
![image](10.png)

**Q2: How many NetBIOS registration requests does the "LIVALJM" workstation have?**
✅ **Answer:** `16`
![image](11.png)

**Q3: Which host requested the IP address "172.16.13.85"?**
✅ **Answer:** `Galaxy-A12`
![image](12.png)

### 🔹 Kerberos Analysis
*Use the "Desktop/exercise-pcaps/dhcp-netbios-kerberos/kerberos.pcap" file.*

**Q4: What is the IP address of the user "u5"? (Enter the address in defanged format.)**
✅ **Answer:** `10[.]1[.]12[.]2`
![image](13.png)

**Q5: What is the hostname of the available host in the Kerberos packets?**
✅ **Answer:** `xp1$`
![image](14.png)


---------------------------------------------------------------------------------------

# 🎯 Task 5: Tunneling Traffic — ICMP and DNS

## 🔍 What you will master:

### 🔒 Tunneling basics:
- ✅ What tunneling is and how it hides data through encapsulation
- ✅ Why ICMP and DNS are used both legitimately and abused by attackers

### 🚨 Detection skills:
- ✅ Identifying anomalies in ICMP (unusual sizes/patterns)
- ✅ Identifying anomalies in DNS (long queries, encoded subdomains)

---

## 📊 ICMP Analysis

ICMP is used for diagnostics and reporting network issues, but it can also carry payloads and be abused for data exfiltration or C2.

### 🔍 Key ideas for investigation:
- Unusual ICMP traffic in terms of volume or packet sizes
- Unusual ICMP destinations
- Indicators of encapsulated protocols in the payload (e.g., SSH signatures)

### 🧰 Useful filters (Wireshark):

| Notes          | Wireshark Filter           |
|----------------|---------------------------|
| Global search  | `icmp`                    |
| Large payload  | `data.len > 64 and icmp`  |
| Inspect payload| Follow → “Show data as Text/Hex” |

---

## 📊 DNS Analysis

DNS maps names to IP addresses, is ubiquitous and trusted — which is why it is attractive for tunneling and C2 through long and encoded subdomains.

### 🔍 Key ideas for investigation:
- Abnormally long queries (encoded subdomains)
- Unusual/unreadable names; abnormal volumes to the same destination
- Known patterns (dnscat, dns2tcp)

### 🧰 Useful filters (Wireshark):

| Notes         | Wireshark Filter                |
|---------------|--------------------------------|
| Global search | `dns`                           |
| Exclude mDNS  | `!mdns`                         |
| Search for dnscat | `dns contains "dnscat"`     |
| Long names    | `dns.qry.name.len > 15 and !mdns` |

---

## 📝 Answer the Questions

### 🔹 ICMP Tunneling
Use the "Desktop/exercise-pcaps/dns-icmp/icmp-tunnel.pcap" file.

**Q1: Investigate the anomalous packets. Which protocol is used in ICMP tunnelling?**  
✅ **Answer:** SSH  
![image](15.png)

### 🔹 DNS Anomalies
Use the "Desktop/exercise-pcaps/dns-icmp/dns.pcap" file.

**Q2: What is the suspicious main domain address that receives anomalous DNS queries? (Enter the address in defanged format.)**  
✅ **Answer:** `dataexfil[.]com`  
![image](16.png)



-------------------------------------------------------------------------------------


## 🎯 Task 6: Cleartext Protocol Analysis — FTP

### 🔍 What you'll master:

- **Why FTP is risky**: cleartext credentials and commands → easy to intercept 🕵️‍♂️
- **How to triage fast**: use response codes and commands to find the signal ⚡
- **How to detect abuse**: brute force, password spraying, suspicious uploads/executions 🚩

### 🧰 Useful Wireshark filters

| **Notes** | **Wireshark Filter** |
|-----------|----------------------|
| Global search | `ftp` |
| Auth success | `ftp.response.code == 230` |
| Auth failures | `ftp.response.code == 530` |
| Passive mode | `ftp.response.code == 227` |
| Username attempts | `ftp.request.command == "USER"` |
| Password attempts | `ftp.request.command == "PASS"` |
| Password spray (static pass) | `(ftp.request.command == "PASS") and (ftp.request.arg == "password")` |

### 🍒 Low-hanging fruits (FTP codes)

- **x1x Information**: `211` (system), `212` (dir), `213` (file) → `ftp.response.code == 211`
- **x2x Connection**: `220` (service ready), `227/228/229` (passive modes) → `ftp.response.code == 227`
- **x3x Authentication**: `230` (login), `231` (logout), `331` (valid username), `430/530` (invalid/no login)

### 🧪 Investigation tips

- Count failures to detect brute force: `ftp.response.code == 530`
- Find target username in failures: `(ftp.response.code == 530) and (ftp.response.arg contains "username")`
- Track suspicious post-auth activity: `STOR`, `APPE`, `SITE`, `CHMOD`, directory changes `CWD`

---

## 📝 Answer the Questions
Use the "Desktop/exercise-pcaps/ftp/ftp.pcap" file.

**Q1: How many incorrect login attempts are there?**  
✅ **Answer:** 737  
![image](17.png)

**Q2: What is the size of the file accessed by the "ftp" account?**  
✅ **Answer:** 39424  
![image](18.png)

**Q3: The adversary uploaded a document to the FTP server. What is the filename?**  
✅ **Answer:** resume.doc  
![image](19.png)

**Q4: The adversary tried to assign special flags to change executing permissions. What command was used?**  
✅ **Answer:** CHMOD 777  
![image](20.png)